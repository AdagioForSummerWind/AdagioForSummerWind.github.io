<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Coding - 分类 - 绿叶律动</title>
        <link>https://jefofrank.xyz/categories/coding/</link>
        <description>Coding - 分类 - 绿叶律动</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>2838264218@qq.com (Jefo)</managingEditor>
            <webMaster>2838264218@qq.com (Jefo)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 22 Jan 2022 09:21:00 &#43;0800</lastBuildDate><atom:link href="https://jefofrank.xyz/categories/coding/" rel="self" type="application/rss+xml" /><item>
    <title>Structural_type</title>
    <link>https://jefofrank.xyz/structural_type/</link>
    <pubDate>Sat, 22 Jan 2022 09:21:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/structural_type/</guid>
    <description><![CDATA[结构型设计模式 常用的有：代理模式、桥接模式、装饰者模式、适配器模式。不常用的有：门面模式、组合模式、享元模式。 代理模式：代理模式在不改变原始]]></description>
</item><item>
    <title>Behavioral_type</title>
    <link>https://jefofrank.xyz/behavioral_type/</link>
    <pubDate>Sat, 22 Jan 2022 09:20:41 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/behavioral_type/</guid>
    <description><![CDATA[行为型设计模式 常用的有：观察者模式、模板模式、策略模式、职责链模式、迭代器模式、状态模式。 不常用的有：命令模式、备忘录模式、解释器模式、访问]]></description>
</item><item>
    <title>Create_type</title>
    <link>https://jefofrank.xyz/create_type/</link>
    <pubDate>Sat, 22 Jan 2022 09:19:30 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/create_type/</guid>
    <description><![CDATA[创建型设计模式 常用的有：单例模式、工厂模式（工厂方法和抽象工厂）、建造者模式。不常用的有：原型模式。 创建型模式主要解决对象的创建问题，封装复]]></description>
</item><item>
    <title>Algorithm_dynamicProgramming</title>
    <link>https://jefofrank.xyz/algorithm_dynamicprogramming/</link>
    <pubDate>Thu, 06 Jan 2022 08:27:39 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/algorithm_dynamicprogramming/</guid>
    <description><![CDATA[学习代码随想录笔记 动态规划 有很多重叠子问题，优先考虑使用动态规划。 与贪心的区别：贪心不会考虑之前的状态而只考虑局部最优。 理论基础 dp步骤： 确]]></description>
</item><item>
    <title>Algorithm_greedy</title>
    <link>https://jefofrank.xyz/algorithm_greedy/</link>
    <pubDate>Thu, 06 Jan 2022 08:23:51 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/algorithm_greedy/</guid>
    <description><![CDATA[学习代码随想录笔记 贪心算法 理论基础 贪心算法一般分为如下四步： 将问题分解为若干个子问题 找出适合的贪心策略 求解每一个子问题的最优解 将局部最优解堆]]></description>
</item><item>
    <title>Algorithm_backTracking</title>
    <link>https://jefofrank.xyz/algorithm_backtracking/</link>
    <pubDate>Thu, 06 Jan 2022 08:22:27 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/algorithm_backtracking/</guid>
    <description><![CDATA[学习代码随想录笔记 回溯算法 理论基础 也叫回溯搜索算法。 回溯是递归的副产品，只要有递归就会有回溯 回溯的本质是穷举，穷举所有可能，然后选出我们想要]]></description>
</item><item>
    <title>Algorithm_binaryTree</title>
    <link>https://jefofrank.xyz/algorithm_binarytree/</link>
    <pubDate>Thu, 06 Jan 2022 08:21:45 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/algorithm_binarytree/</guid>
    <description><![CDATA[学习代码随想录笔记 二叉树 理论基础 一般主要会碰到满二叉树以及完全二叉树。 完全二叉树的定义如下：在完全二叉树中，除了最底层节点可能没填满外，其余]]></description>
</item><item>
    <title>Algorithm_stackAndQueue</title>
    <link>https://jefofrank.xyz/algorithm_stackandqueue/</link>
    <pubDate>Thu, 06 Jan 2022 08:20:54 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/algorithm_stackandqueue/</guid>
    <description><![CDATA[学习代码随想录笔记 栈和队列 需要知道栈和队列的底层实现，不同编程语言不同STL的实现原理都是不尽相同的。 理论基础(c++) 栈其实就是递归的一种]]></description>
</item><item>
    <title>Algorithm_doublePointer</title>
    <link>https://jefofrank.xyz/algorithm_doublepointer/</link>
    <pubDate>Thu, 06 Jan 2022 08:19:19 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/algorithm_doublepointer/</guid>
    <description><![CDATA[学习代码随想录笔记 双指针法 双指针法（快慢指针法）在数组和链表的操作中是非常常见的，很多考察数组、链表、字符串等操作的面试题，都使用双指针法。]]></description>
</item><item>
    <title>Algorithm_string</title>
    <link>https://jefofrank.xyz/algorithm_string/</link>
    <pubDate>Thu, 06 Jan 2022 08:18:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://jefofrank.xyz/algorithm_string/</guid>
    <description><![CDATA[学习代码随想录笔记 字符串 库函数是工具，基础更重要。 输入输出 单独读一行：先用bufio.NewReader(os.Stdin)从标准输入中读取]]></description>
</item></channel>
</rss>
